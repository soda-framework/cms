{"version":3,"sources":["page-tree.js"],"names":["Soda","elements","tree","row","toleranceElement","handle","minify","classes","branchClass","collapsedClass","disableNestingClass","errorClass","expandedClass","hoveringClass","placeholder","leafClass","disabledClass","_registerEvents","parameters","$","extend","items","listType","isTree","protectRoot","startCollapsed","expandOnHover","tabSize","relocate","event","item","_moveNode","nestedSortable","on","e","preventDefault","this","closest","toggleClass","$item","itemId","data","parent","parentId","$previous","prev","$next","next","entityName","id","length","type","positionEntityId","changePosition","pageTree"],"mappings":"CAAA,SAAWA,GACP,GAAIC,IACAC,KAAM,aACNC,IAAK,YACLC,iBAAkB,eAClBC,OAAQ,yBACRC,OAAQ,WAGRC,GACAC,YAAa,gBACbC,eAAgB,YAChBC,qBAAqB,EACrBC,YAAY,EACZC,cAAe,WACfC,eAAe,EACfC,YAAa,qBACbC,WAAW,EACXC,eAAe,GAGfC,EAAkB,WAClB,GAAIC,GAAaC,EAAEC,WACff,OAAQJ,EAASI,OACjBgB,MAAO,KACPC,SAAU,KACVlB,iBAAkB,eAClBmB,QAAQ,EACRC,aAAa,EACbC,gBAAgB,EAChBC,cAAe,IACfC,QAAS,GACTC,SAAU,SAASC,EAAOC,GACtBC,EAAUD,EAAKA,QAEpBvB,EAEHY,GAAElB,EAASC,MAAM8B,eAAed,GAEhCC,EAAElB,EAASK,QAAQ2B,GAAG,QAAS,SAAUC,GACrCA,EAAEC,iBAEFhB,EAAEiB,MAAMC,QAAQpC,EAASE,KAAKmC,YAAY/B,EAAQE,gBAAgB6B,YAAY/B,EAAQK,kBAI1FmB,EAAY,SAASQ,GACrB,GAAIC,GAASD,EAAME,KAAK,MACpBC,EAASH,EAAMG,SAASL,QAAQpC,EAASE,KACzCwC,EAAWD,EAAOD,KAAK,KAE3B,IAAwB,mBAAbE,GAA0B,CAEjC,GAAIC,GAAYL,EAAMM,OAClBC,EAAQP,EAAMQ,OAEdN,GACAO,WAAY,QACZC,GAAIT,EAGJI,GAAUM,OAAS,GACnBT,EAAKU,KAAO,YACZV,EAAKW,iBAAmBR,EAAUH,KAAK,MACvCzC,EAAKqD,eAAeZ,IACbK,EAAMI,OAAS,GACtBT,EAAKU,KAAO,aACZV,EAAKW,iBAAmBN,EAAML,KAAK,MACnCzC,EAAKqD,eAAeZ,KAEpBA,EAAKU,KAAO,WACZV,EAAKW,iBAAmBT,EACxB3C,EAAKqD,eAAeZ,IAGxBF,EAAME,KAAK,cAanB,OATAtB,GAAE,WACEF,MAGJjB,EAAKsD,UACDrD,SAAUA,EACVM,QAASA,GAGNP,GAERA","file":"page-tree.min.js","sourcesContent":["(function (Soda) {\n    var elements = {\n        tree: '#page-tree',\n        row: '.tree-row',\n        toleranceElement: '> .tree-item',\n        handle: '> .tree-item > .handle',\n        minify: '.minify',\n    }\n\n    var classes = {\n        branchClass: 'has-sub-items',\n        collapsedClass: 'collapsed',\n        disableNestingClass: false,\n        errorClass: false,\n        expandedClass: 'expanded',\n        hoveringClass: false,\n        placeholder: 'tree-item hovering',\n        leafClass: false,\n        disabledClass: false,\n    }\n\n    var _registerEvents = function () {\n        var parameters = $.extend({}, {\n            handle: elements.handle,\n            items: 'li',\n            listType: 'ul',\n            toleranceElement: '> .tree-item',\n            isTree: true,\n            protectRoot: true,\n            startCollapsed: true,\n            expandOnHover: 300,\n            tabSize: 75,\n            relocate: function(event, item) {\n                _moveNode(item.item);\n            },\n        }, classes);\n\n        $(elements.tree).nestedSortable(parameters);\n\n        $(elements.minify).on('click', function (e) {\n            e.preventDefault();\n\n            $(this).closest(elements.row).toggleClass(classes.collapsedClass).toggleClass(classes.expandedClass);\n        });\n    }\n\n    var _moveNode = function($item) {\n        var itemId = $item.data('id');\n        var parent = $item.parent().closest(elements.row);\n        var parentId = parent.data('id');\n\n        if (typeof parentId !== 'undefined') {\n\n            var $previous = $item.prev();\n            var $next = $item.next();\n\n            var data = {\n                entityName: 'pages',\n                id: itemId\n            }\n\n            if ($previous.length > 0) {\n                data.type = 'moveAfter';\n                data.positionEntityId = $previous.data('id');\n                Soda.changePosition(data);\n            } else if ($next.length > 0) {\n                data.type = 'moveBefore';\n                data.positionEntityId = $next.data('id');\n                Soda.changePosition(data);\n            } else {\n                data.type = 'moveInto';\n                data.positionEntityId = parentId;\n                Soda.changePosition(data);\n            }\n\n            $item.data('parent-id')\n        }\n    }\n\n    $(function(){\n        _registerEvents();\n    })\n\n    Soda.pageTree = {\n        elements: elements,\n        classes: classes,\n    };\n\n    return Soda;\n\n})(Soda || {});\n"],"sourceRoot":"/source/"}