{"version":3,"sources":["jquery.mjs.nestedSortable.js"],"names":[],"mappingsfile":"sortable.js","sourcesContent":["/*\n * jQuery UI Nested Sortable\n * v 2.1a / 2016-02-04\n * https://github.com/ilikenwf/nestedSortable\n *\n * Depends on:\n *\t jquery.ui.sortable.js 1.10+\n *\n * Copyright (c) 2010-2016 Manuele J Sarfatti and contributors\n * Licensed under the MIT License\n * http://www.opensource.org/licenses/mit-license.php\n */\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([\n\t\t\t\"jquery\",\n\t\t\t\"jquery-ui/sortable\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( window.jQuery );\n\t}\n}(function($) {\n\t\"use strict\";\n\n\tfunction isOverAxis( x, reference, size ) {\n\t\treturn ( x > reference ) && ( x < ( reference + size ) );\n\t}\n\n\t$.widget(\"mjs.nestedSortable\", $.extend({}, $.ui.sortable.prototype, {\n\n\t\toptions: {\n\t\t\tdisableParentChange: false,\n\t\t\tdoNotClear: false,\n\t\t\texpandOnHover: 700,\n\t\t\tisAllowed: function() { return true; },\n\t\t\tisTree: false,\n\t\t\tlistType: \"ol\",\n\t\t\tmaxLevels: 0,\n\t\t\tprotectRoot: false,\n\t\t\trootID: null,\n\t\t\trtl: false,\n\t\t\tstartCollapsed: false,\n\t\t\ttabSize: 20,\n\n\t\t\tbranchClass: \"mjs-nestedSortable-branch\",\n\t\t\tcollapsedClass: \"mjs-nestedSortable-collapsed\",\n\t\t\tdisableNestingClass: \"mjs-nestedSortable-no-nesting\",\n\t\t\terrorClass: \"mjs-nestedSortable-error\",\n\t\t\texpandedClass: \"mjs-nestedSortable-expanded\",\n\t\t\thoveringClass: \"mjs-nestedSortable-hovering\",\n\t\t\tleafClass: \"mjs-nestedSortable-leaf\",\n\t\t\tdisabledClass: \"mjs-nestedSortable-disabled\"\n\t\t},\n\n\t\t_create: function() {\n\t\t\tvar self = this,\n\t\t\t\terr;\n\n\t\t\tthis.element.data(\"ui-sortable\", this.element.data(\"mjs-nestedSortable\"));\n\n\t\t\t// mjs - prevent browser from freezing if the HTML is not correct\n\t\t\tif (!this.element.is(this.options.listType)) {\n\t\t\t\terr = \"nestedSortable: \" +\n\t\t\t\t\t\"Please check that the listType option is set to your actual list type\";\n\n\t\t\t\tthrow new Error(err);\n\t\t\t}\n\n\t\t\t// if we have a tree with expanding/collapsing functionality,\n\t\t\t// force 'intersect' tolerance method\n\t\t\tif (this.options.isTree && this.options.expandOnHover) {\n\t\t\t\tthis.options.tolerance = \"intersect\";\n\t\t\t}\n\n\t\t\t$.ui.sortable.prototype._create.apply(this, arguments);\n\n\t\t\t// prepare the tree by applying the right classes\n\t\t\t// (the CSS is responsible for actual hide/show functionality)\n\t\t\tif (this.options.isTree) {\n\t\t\t\t$(this.items).each(function() {\n\t\t\t\t\tvar $li = this.item,\n\t\t\t\t\t\thasCollapsedClass = $li.hasClass(self.options.collapsedClass),\n\t\t\t\t\t\thasExpandedClass = $li.hasClass(self.options.expandedClass);\n\n\t\t\t\t\tif ($li.children(self.options.listType).length) {\n\t\t\t\t\t\t$li.addClass(self.options.branchClass);\n\t\t\t\t\t\t// expand/collapse class only if they have children\n\n\t\t\t\t\t\tif ( !hasCollapsedClass && !hasExpandedClass ) {\n\t\t\t\t\t\t\tif (self.options.startCollapsed) {\n\t\t\t\t\t\t\t\t$li.addClass(self.options.collapsedClass);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$li.addClass(self.options.expandedClass);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$li.addClass(self.options.leafClass);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t_destroy: function() {\n\t\t\tthis.element\n\t\t\t\t.removeData(\"mjs-nestedSortable\")\n\t\t\t\t.removeData(\"ui-sortable\");\n\t\t\treturn $.ui.sortable.prototype._destroy.apply(this, arguments);\n\t\t},\n\n\t\t_mouseDrag: function(event) {\n\t\t\tvar i,\n\t\t\t\titem,\n\t\t\t\titemElement,\n\t\t\t\tintersection,\n\t\t\t\tself = this,\n\t\t\t\to = this.options,\n\t\t\t\tscrolled = false,\n\t\t\t\t$document = $(document),\n\t\t\t\tpreviousTopOffset,\n\t\t\t\tparentItem,\n\t\t\t\tlevel,\n\t\t\t\tchildLevels,\n\t\t\t\titemAfter,\n\t\t\t\titemBefore,\n\t\t\t\tnewList,\n\t\t\t\tmethod,\n\t\t\t\ta,\n\t\t\t\tpreviousItem,\n\t\t\t\tnextItem,\n\t\t\t\thelperIsNotSibling;\n\n\t\t\t//Compute the helpers position\n\t\t\tthis.position = this._generatePosition(event);\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\tif (!this.lastPositionAbs) {\n\t\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\t}\n\n\t\t\t//Do scrolling\n\t\t\tif (this.options.scroll) {\n\t\t\t\tif (this.scrollParent[0] !== document && this.scrollParent[0].tagName !== \"HTML\") {\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tthis.overflowOffset.top +\n\t\t\t\t\t\t\tthis.scrollParent[0].offsetHeight\n\t\t\t\t\t\t) -\n\t\t\t\t\t\tevent.pageY <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = this.scrollParent.scrollTop() + o.scrollSpeed;\n\t\t\t\t\t\tthis.scrollParent.scrollTop(scrolled);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.pageY -\n\t\t\t\t\t\tthis.overflowOffset.top <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = this.scrollParent.scrollTop() - o.scrollSpeed;\n\t\t\t\t\t\tthis.scrollParent.scrollTop(scrolled);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tthis.overflowOffset.left +\n\t\t\t\t\t\t\tthis.scrollParent[0].offsetWidth\n\t\t\t\t\t\t) -\n\t\t\t\t\t\tevent.pageX <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = this.scrollParent.scrollLeft() + o.scrollSpeed;\n\t\t\t\t\t\tthis.scrollParent.scrollLeft(scrolled);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.pageX -\n\t\t\t\t\t\tthis.overflowOffset.left <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = this.scrollParent.scrollLeft() - o.scrollSpeed;\n\t\t\t\t\t\tthis.scrollParent.scrollLeft(scrolled);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.pageY -\n\t\t\t\t\t\t$document.scrollTop() <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = $document.scrollTop() - o.scrollSpeed;\n\t\t\t\t\t\t$document.scrollTop(scrolled);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t$(window).height() -\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tevent.pageY -\n\t\t\t\t\t\t\t$document.scrollTop()\n\t\t\t\t\t\t) <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = $document.scrollTop() + o.scrollSpeed;\n\t\t\t\t\t\t$document.scrollTop(scrolled);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.pageX -\n\t\t\t\t\t\t$document.scrollLeft() <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = $document.scrollLeft() - o.scrollSpeed;\n\t\t\t\t\t\t$document.scrollLeft(scrolled);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t$(window).width() -\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tevent.pageX -\n\t\t\t\t\t\t\t$document.scrollLeft()\n\t\t\t\t\t\t) <\n\t\t\t\t\t\to.scrollSensitivity\n\t\t\t\t\t) {\n\t\t\t\t\t\tscrolled = $document.scrollLeft() + o.scrollSpeed;\n\t\t\t\t\t\t$document.scrollLeft(scrolled);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\n\t\t\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Regenerate the absolute position used for position checks\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\t// mjs - find the top offset before rearrangement,\n\t\t\tpreviousTopOffset = this.placeholder.offset().top;\n\n\t\t\t//Set the helper position\n\t\t\tif (!this.options.axis || this.options.axis !== \"y\") {\n\t\t\t\tthis.helper[0].style.left = this.position.left + \"px\";\n\t\t\t}\n\t\t\tif (!this.options.axis || this.options.axis !== \"x\") {\n\t\t\t\tthis.helper[0].style.top = (this.position.top) + \"px\";\n\t\t\t}\n\n\t\t\t// mjs - check and reset hovering state at each cycle\n\t\t\tthis.hovering = this.hovering ? this.hovering : null;\n\t\t\tthis.mouseentered = this.mouseentered ? this.mouseentered : false;\n\n\t\t\t// mjs - let's start caching some variables\n\t\t\t(function() {\n\t\t\t\tvar _parentItem = this.placeholder.parent().parent();\n\t\t\t\tif (_parentItem && _parentItem.closest(\".ui-sortable\").length) {\n\t\t\t\t\tparentItem = _parentItem;\n\t\t\t\t}\n\t\t\t}.call(this));\n\n\t\t\tlevel = this._getLevel(this.placeholder);\n\t\t\tchildLevels = this._getChildLevels(this.helper);\n\t\t\tnewList = document.createElement(o.listType);\n\n\t\t\t//Rearrange\n\t\t\tfor (i = this.items.length - 1; i >= 0; i--) {\n\n\t\t\t\t//Cache variables and intersection, continue if no intersection\n\t\t\t\titem = this.items[i];\n\t\t\t\titemElement = item.item[0];\n\t\t\t\tintersection = this._intersectsWithPointer(item);\n\t\t\t\tif (!intersection) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Only put the placeholder inside the current Container, skip all\n\t\t\t\t// items form other containers. This works because when moving\n\t\t\t\t// an item from one container to another the\n\t\t\t\t// currentContainer is switched before the placeholder is moved.\n\t\t\t\t//\n\t\t\t\t// Without this moving items in \"sub-sortables\" can cause the placeholder to jitter\n\t\t\t\t// beetween the outer and inner container.\n\t\t\t\tif (item.instance !== this.currentContainer) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// No action if intersected item is disabled\n\t\t\t\t// and the element above or below in the direction we're going is also disabled\n\t\t\t\tif (itemElement.className.indexOf(o.disabledClass) !== -1) {\n\t\t\t\t\t// Note: intersection hardcoded direction values from\n\t\t\t\t\t// jquery.ui.sortable.js:_intersectsWithPointer\n\t\t\t\t\tif (intersection === 2) {\n\t\t\t\t\t\t// Going down\n\t\t\t\t\t\titemAfter = this.items[i + 1];\n\t\t\t\t\t\tif (itemAfter && itemAfter.item.hasClass(o.disabledClass)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (intersection === 1) {\n\t\t\t\t\t\t// Going up\n\t\t\t\t\t\titemBefore = this.items[i - 1];\n\t\t\t\t\t\tif (itemBefore && itemBefore.item.hasClass(o.disabledClass)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmethod = intersection === 1 ? \"next\" : \"prev\";\n\n\t\t\t\t// cannot intersect with itself\n\t\t\t\t// no useless actions that have been done before\n\t\t\t\t// no action if the item moved is the parent of the item checked\n\t\t\t\tif (itemElement !== this.currentItem[0] &&\n\t\t\t\t\tthis.placeholder[method]()[0] !== itemElement &&\n\t\t\t\t\t!$.contains(this.placeholder[0], itemElement) &&\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.options.type === \"semi-dynamic\" ?\n\t\t\t\t\t\t\t!$.contains(this.element[0], itemElement) :\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t)\n\t\t\t\t) {\n\n\t\t\t\t\t// mjs - we are intersecting an element:\n\t\t\t\t\t// trigger the mouseenter event and store this state\n\t\t\t\t\tif (!this.mouseentered) {\n\t\t\t\t\t\t$(itemElement).mouseenter();\n\t\t\t\t\t\tthis.mouseentered = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// mjs - if the element has children and they are hidden,\n\t\t\t\t\t// show them after a delay (CSS responsible)\n\t\t\t\t\tif (o.isTree && $(itemElement).hasClass(o.collapsedClass) && o.expandOnHover) {\n\t\t\t\t\t\tif (!this.hovering) {\n\t\t\t\t\t\t\t$(itemElement).addClass(o.hoveringClass);\n\t\t\t\t\t\t\tthis.hovering = window.setTimeout(function() {\n\t\t\t\t\t\t\t\t$(itemElement)\n\t\t\t\t\t\t\t\t\t.removeClass(o.collapsedClass)\n\t\t\t\t\t\t\t\t\t.addClass(o.expandedClass);\n\n\t\t\t\t\t\t\t\tself.refreshPositions();\n\t\t\t\t\t\t\t\tself._trigger(\"expand\", event, self._uiHash());\n\t\t\t\t\t\t\t}, o.expandOnHover);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.direction = intersection === 1 ? \"down\" : \"up\";\n\n\t\t\t\t\t// mjs - rearrange the elements and reset timeouts and hovering state\n\t\t\t\t\tif (this.options.tolerance === \"pointer\" || this._intersectsWithSides(item)) {\n\t\t\t\t\t\t$(itemElement).mouseleave();\n\t\t\t\t\t\tthis.mouseentered = false;\n\t\t\t\t\t\t$(itemElement).removeClass(o.hoveringClass);\n\t\t\t\t\t\tif (this.hovering) {\n\t\t\t\t\t\t\twindow.clearTimeout(this.hovering);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.hovering = null;\n\n\t\t\t\t\t\t// mjs - do not switch container if\n\t\t\t\t\t\t// it's a root item and 'protectRoot' is true\n\t\t\t\t\t\t// or if it's not a root item but we are trying to make it root\n\t\t\t\t\t\tif (o.protectRoot &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\tthis.currentItem[0].parentNode === this.element[0] &&\n\t\t\t\t\t\t\t\t// it's a root item\n\t\t\t\t\t\t\t\titemElement.parentNode !== this.element[0]\n\t\t\t\t\t\t\t\t// it's intersecting a non-root item\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (this.currentItem[0].parentNode !== this.element[0] &&\n\t\t\t\t\t\t\t\titemElement.parentNode === this.element[0]\n\t\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\t\tif ( !$(itemElement).children(o.listType).length) {\n\t\t\t\t\t\t\t\t\titemElement.appendChild(newList);\n\t\t\t\t\t\t\t\t\tif (o.isTree) {\n\t\t\t\t\t\t\t\t\t\t$(itemElement)\n\t\t\t\t\t\t\t\t\t\t\t.removeClass(o.leafClass)\n\t\t\t\t\t\t\t\t\t\t\t.addClass(o.branchClass + \" \" + o.expandedClass);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (this.direction === \"down\") {\n\t\t\t\t\t\t\t\t\ta = $(itemElement).prev().children(o.listType);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ta = $(itemElement).children(o.listType);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (a[0] !== undefined) {\n\t\t\t\t\t\t\t\t\tthis._rearrange(event, null, a);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._rearrange(event, item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!o.protectRoot) {\n\t\t\t\t\t\t\tthis._rearrange(event, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clear emtpy ul's/ol's\n\t\t\t\t\tthis._clearEmpty(itemElement);\n\n\t\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// mjs - to find the previous sibling in the list,\n\t\t\t// keep backtracking until we hit a valid list item.\n\t\t\t(function() {\n\t\t\t\tvar _previousItem = this.placeholder.prev();\n\t\t\t\tif (_previousItem.length) {\n\t\t\t\t\tpreviousItem = _previousItem;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousItem = null;\n\t\t\t\t}\n\t\t\t}.call(this));\n\n\t\t\tif (previousItem != null) {\n\t\t\t\twhile (\n\t\t\t\t\tpreviousItem[0].nodeName.toLowerCase() !== \"li\" ||\n\t\t\t\t\tpreviousItem[0].className.indexOf(o.disabledClass) !== -1 ||\n\t\t\t\t\tpreviousItem[0] === this.currentItem[0] ||\n\t\t\t\t\tpreviousItem[0] === this.helper[0]\n\t\t\t\t) {\n\t\t\t\t\tif (previousItem[0].previousSibling) {\n\t\t\t\t\t\tpreviousItem = $(previousItem[0].previousSibling);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpreviousItem = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// mjs - to find the next sibling in the list,\n\t\t\t// keep stepping forward until we hit a valid list item.\n\t\t\t(function() {\n\t\t\t\tvar _nextItem = this.placeholder.next();\n\t\t\t\tif (_nextItem.length) {\n\t\t\t\t\tnextItem = _nextItem;\n\t\t\t\t} else {\n\t\t\t\t\tnextItem = null;\n\t\t\t\t}\n\t\t\t}.call(this));\n\n\t\t\tif (nextItem != null) {\n\t\t\t\twhile (\n\t\t\t\t\tnextItem[0].nodeName.toLowerCase() !== \"li\" ||\n\t\t\t\t\tnextItem[0].className.indexOf(o.disabledClass) !== -1 ||\n\t\t\t\t\tnextItem[0] === this.currentItem[0] ||\n\t\t\t\t\tnextItem[0] === this.helper[0]\n\t\t\t\t) {\n\t\t\t\t\tif (nextItem[0].nextSibling) {\n\t\t\t\t\t\tnextItem = $(nextItem[0].nextSibling);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextItem = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.beyondMaxLevels = 0;\n\n\t\t\t// mjs - if the item is moved to the left, send it one level up\n\t\t\t// but only if it's at the bottom of the list\n\t\t\tif (parentItem != null &&\n\t\t\t\tnextItem == null &&\n\t\t\t\t!(o.protectRoot && parentItem[0].parentNode == this.element[0]) &&\n\t\t\t\t(\n\t\t\t\t\to.rtl &&\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.positionAbs.left +\n\t\t\t\t\t\tthis.helper.outerWidth() > parentItem.offset().left +\n\t\t\t\t\t\tparentItem.outerWidth()\n\t\t\t\t\t) ||\n\t\t\t\t\t!o.rtl && (this.positionAbs.left < parentItem.offset().left)\n\t\t\t\t)\n\t\t\t) {\n\n\t\t\t\tparentItem.after(this.placeholder[0]);\n\t\t\t\thelperIsNotSibling = !parentItem\n\t\t\t\t\t\t\t\t\t\t\t.children(o.listItem)\n\t\t\t\t\t\t\t\t\t\t\t.children(\"li:visible:not(.ui-sortable-helper)\")\n\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\tif (o.isTree && helperIsNotSibling) {\n\t\t\t\t\tparentItem\n\t\t\t\t\t\t.removeClass(this.options.branchClass + \" \" + this.options.expandedClass)\n\t\t\t\t\t\t.addClass(this.options.leafClass);\n\t\t\t\t}\n                if(typeof parentItem !== 'undefined')\n\t\t\t\t    this._clearEmpty(parentItem[0]);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t\t// mjs - if the item is below a sibling and is moved to the right,\n\t\t\t\t// make it a child of that sibling\n\t\t\t} else if (previousItem != null &&\n\t\t\t\t!previousItem.hasClass(o.disableNestingClass) &&\n\t\t\t\t(\n\t\t\t\t\tpreviousItem.children(o.listType).length &&\n\t\t\t\t\tpreviousItem.children(o.listType).is(\":visible\") ||\n\t\t\t\t\t!previousItem.children(o.listType).length\n\t\t\t\t) &&\n\t\t\t\t!(o.protectRoot && this.currentItem[0].parentNode === this.element[0]) &&\n\t\t\t\t(\n\t\t\t\t\to.rtl &&\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.positionAbs.left +\n\t\t\t\t\t\tthis.helper.outerWidth() <\n\t\t\t\t\t\tpreviousItem.offset().left +\n\t\t\t\t\t\tpreviousItem.outerWidth() -\n\t\t\t\t\t\to.tabSize\n\t\t\t\t\t) ||\n\t\t\t\t\t!o.rtl &&\n\t\t\t\t\t(this.positionAbs.left > previousItem.offset().left + o.tabSize)\n\t\t\t\t)\n\t\t\t) {\n\n\t\t\t\tthis._isAllowed(previousItem, level, level + childLevels + 1);\n\n\t\t\t\tif (!previousItem.children(o.listType).length) {\n\t\t\t\t\tpreviousItem[0].appendChild(newList);\n\t\t\t\t\tif (o.isTree) {\n\t\t\t\t\t\tpreviousItem\n\t\t\t\t\t\t\t.removeClass(o.leafClass)\n\t\t\t\t\t\t\t.addClass(o.branchClass + \" \" + o.expandedClass);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// mjs - if this item is being moved from the top, add it to the top of the list.\n\t\t\t\tif (previousTopOffset && (previousTopOffset <= previousItem.offset().top)) {\n\t\t\t\t\tpreviousItem.children(o.listType).prepend(this.placeholder);\n\t\t\t\t} else {\n\t\t\t\t\t// mjs - otherwise, add it to the bottom of the list.\n\t\t\t\t\tpreviousItem.children(o.listType)[0].appendChild(this.placeholder[0]);\n\t\t\t\t}\n                if(typeof parentItem !== 'undefined')\n\t\t\t\t    this._clearEmpty(parentItem[0]);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t} else {\n\t\t\t\tthis._isAllowed(parentItem, level, level + childLevels);\n\t\t\t}\n\n\t\t\t//Post events to containers\n\t\t\tthis._contactContainers(event);\n\n\t\t\t//Interconnect with droppables\n\t\t\tif ($.ui.ddmanager) {\n\t\t\t\t$.ui.ddmanager.drag(this, event);\n\t\t\t}\n\n\t\t\t//Call callbacks\n\t\t\tthis._trigger(\"sort\", event, this._uiHash());\n\n\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\treturn false;\n\n\t\t},\n\n\t\t_mouseStop: function(event) {\n\t\t\t// mjs - if the item is in a position not allowed, send it back\n\t\t\tif (this.beyondMaxLevels) {\n\n\t\t\t\tthis.placeholder.removeClass(this.options.errorClass);\n\n\t\t\t\tif (this.domPosition.prev) {\n\t\t\t\t\t$(this.domPosition.prev).after(this.placeholder);\n\t\t\t\t} else {\n\t\t\t\t\t$(this.domPosition.parent).prepend(this.placeholder);\n\t\t\t\t}\n\n\t\t\t\tthis._trigger(\"revert\", event, this._uiHash());\n\n\t\t\t}\n\n\t\t\t// mjs - clear the hovering timeout, just to be sure\n\t\t\t$(\".\" + this.options.hoveringClass)\n\t\t\t\t.mouseleave()\n\t\t\t\t.removeClass(this.options.hoveringClass);\n\n\t\t\tthis.mouseentered = false;\n\t\t\tif (this.hovering) {\n\t\t\t\twindow.clearTimeout(this.hovering);\n\t\t\t}\n\t\t\tthis.hovering = null;\n\n\t\t\tthis._relocate_event = event;\n\t\t\tthis._pid_current = $(this.domPosition.parent).parent().attr(\"id\");\n\t\t\tthis._sort_current = this.domPosition.prev ? $(this.domPosition.prev).next().index() : 0;\n\t\t\t$.ui.sortable.prototype._mouseStop.apply(this, arguments); //asybnchronous execution, @see _clear for the relocate event.\n\t\t},\n\n\t\t// mjs - this function is slightly modified\n\t\t// to make it easier to hover over a collapsed element and have it expand\n\t\t_intersectsWithSides: function(item) {\n\n\t\t\tvar half = this.options.isTree ? .8 : .5,\n\t\t\t\tisOverBottomHalf = isOverAxis(\n\t\t\t\t\tthis.positionAbs.top + this.offset.click.top,\n\t\t\t\t\titem.top + (item.height * half),\n\t\t\t\t\titem.height\n\t\t\t\t),\n\t\t\t\tisOverTopHalf = isOverAxis(\n\t\t\t\t\tthis.positionAbs.top + this.offset.click.top,\n\t\t\t\t\titem.top - (item.height * half),\n\t\t\t\t\titem.height\n\t\t\t\t),\n\t\t\t\tisOverRightHalf = isOverAxis(\n\t\t\t\t\tthis.positionAbs.left + this.offset.click.left,\n\t\t\t\t\titem.left + (item.width / 2),\n\t\t\t\t\titem.width\n\t\t\t\t),\n\t\t\t\tverticalDirection = this._getDragVerticalDirection(),\n\t\t\t\thorizontalDirection = this._getDragHorizontalDirection();\n\n\t\t\tif (this.floating && horizontalDirection) {\n\t\t\t\treturn (\n\t\t\t\t\t(horizontalDirection === \"right\" && isOverRightHalf) ||\n\t\t\t\t\t(horizontalDirection === \"left\" && !isOverRightHalf)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn verticalDirection && (\n\t\t\t\t\t(verticalDirection === \"down\" && isOverBottomHalf) ||\n\t\t\t\t\t(verticalDirection === \"up\" && isOverTopHalf)\n\t\t\t\t);\n\t\t\t}\n\n\t\t},\n\n\t\t_contactContainers: function() {\n\n\t\t\tif (this.options.protectRoot && this.currentItem[0].parentNode === this.element[0] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.ui.sortable.prototype._contactContainers.apply(this, arguments);\n\n\t\t},\n\n\t\t_clear: function() {\n\t\t\tvar i,\n\t\t\t\titem;\n\n\t\t\t$.ui.sortable.prototype._clear.apply(this, arguments);\n\n\t\t\t//relocate event\n\t\t\tif (!(this._pid_current === this._uiHash().item.parent().parent().attr(\"id\") &&\n\t\t\t\tthis._sort_current === this._uiHash().item.index())) {\n\t\t\t\tthis._trigger(\"relocate\", this._relocate_event, this._uiHash());\n\t\t\t}\n\n\t\t\t// mjs - clean last empty ul/ol\n\t\t\tfor (i = this.items.length - 1; i >= 0; i--) {\n\t\t\t\titem = this.items[i].item[0];\n\t\t\t\tthis._clearEmpty(item);\n\t\t\t}\n\n\t\t},\n\n\t\tserialize: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\titems = this._getItemsAsjQuery(o && o.connected),\n\t\t\t\tstr = [];\n\n\t\t\t$(items).each(function() {\n\t\t\t\tvar res = ($(o.item || this).attr(o.attribute || \"id\") || \"\")\n\t\t\t\t\t\t.match(o.expression || (/(.+)[-=_](.+)/)),\n\t\t\t\t\tpid = ($(o.item || this).parent(o.listType)\n\t\t\t\t\t\t.parent(o.items)\n\t\t\t\t\t\t.attr(o.attribute || \"id\") || \"\")\n\t\t\t\t\t\t.match(o.expression || (/(.+)[-=_](.+)/));\n\n\t\t\t\tif (res) {\n\t\t\t\t\tstr.push(\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(o.key || res[1]) +\n\t\t\t\t\t\t\t\"[\" +\n\t\t\t\t\t\t\t(o.key && o.expression ? res[1] : res[2]) + \"]\"\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\t(pid ? (o.key && o.expression ? pid[1] : pid[2]) : o.rootID));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!str.length && o.key) {\n\t\t\t\tstr.push(o.key + \"=\");\n\t\t\t}\n\n\t\t\treturn str.join(\"&\");\n\n\t\t},\n\n\t\ttoHierarchy: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\tret = [];\n\n\t\t\t$(this.element).children(o.items).each(function() {\n\t\t\t\tvar level = _recursiveItems(this);\n\t\t\t\tret.push(level);\n\t\t\t});\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveItems(item) {\n\t\t\t\tvar id = ($(item).attr(o.attribute || \"id\") || \"\").match(o.expression || (/(.+)[-=_](.+)/)),\n\t\t\t\t\tcurrentItem;\n\n\t\t\t\tvar data = $(item).data();\n\t\t\t\tif (data.nestedSortableItem) {\n\t\t\t\t\tdelete data.nestedSortableItem; // Remove the nestedSortableItem object from the data\n\t\t\t\t}\n\n\t\t\t\tif (id) {\n\t\t\t\t\tcurrentItem = {\n\t\t\t\t\t\t\"id\": id[2]\n\t\t\t\t\t};\n\n\t\t\t\t\tcurrentItem = $.extend({}, currentItem, data); // Combine the two objects\n\n\t\t\t\t\tif ($(item).children(o.listType).children(o.items).length > 0) {\n\t\t\t\t\t\tcurrentItem.children = [];\n\t\t\t\t\t\t$(item).children(o.listType).children(o.items).each(function() {\n\t\t\t\t\t\t\tvar level = _recursiveItems(this);\n\t\t\t\t\t\t\tcurrentItem.children.push(level);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttoArray: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\tsDepth = o.startDepthCount || 0,\n\t\t\t\tret = [],\n\t\t\t\tleft = 1;\n\n\t\t\tif (!o.excludeRoot) {\n\t\t\t\tret.push({\n\t\t\t\t\t\"item_id\": o.rootID,\n\t\t\t\t\t\"parent_id\": null,\n\t\t\t\t\t\"depth\": sDepth,\n\t\t\t\t\t\"left\": left,\n\t\t\t\t\t\"right\": ($(o.items, this.element).length + 1) * 2\n\t\t\t\t});\n\t\t\t\tleft++;\n\t\t\t}\n\n\t\t\t$(this.element).children(o.items).each(function() {\n\t\t\t\tleft = _recursiveArray(this, sDepth, left);\n\t\t\t});\n\n\t\t\tret = ret.sort(function(a, b) { return (a.left - b.left); });\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveArray(item, depth, _left) {\n\n\t\t\t\tvar right = _left + 1,\n\t\t\t\t\tid,\n\t\t\t\t\tpid,\n\t\t\t\t\tparentItem;\n\n\t\t\t\tif ($(item).children(o.listType).children(o.items).length > 0) {\n\t\t\t\t\tdepth++;\n\t\t\t\t\t$(item).children(o.listType).children(o.items).each(function() {\n\t\t\t\t\t\tright = _recursiveArray($(this), depth, right);\n\t\t\t\t\t});\n\t\t\t\t\tdepth--;\n\t\t\t\t}\n\n\t\t\t\tid = ($(item).attr(o.attribute || \"id\")).match(o.expression || (/(.+)[-=_](.+)/));\n\n\t\t\t\tif (depth === sDepth) {\n\t\t\t\t\tpid = o.rootID;\n\t\t\t\t} else {\n\t\t\t\t\tparentItem = ($(item).parent(o.listType)\n\t\t\t\t\t\t\t\t\t\t\t.parent(o.items)\n\t\t\t\t\t\t\t\t\t\t\t.attr(o.attribute || \"id\"))\n\t\t\t\t\t\t\t\t\t\t\t.match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\t\tpid = parentItem[2];\n\t\t\t\t}\n\n\t\t\t\tif (id) {\n\t\t\t\t\t        var name = $(item).data(\"name\");\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\t\"id\": id[2],\n\t\t\t\t\t\t\t\"parent_id\": pid,\n\t\t\t\t\t\t\t\"depth\": depth,\n\t\t\t\t\t\t\t\"left\": _left,\n\t\t\t\t\t\t\t\"right\": right,\n\t\t\t\t\t\t\t\"name\":name\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t_left = right + 1;\n\t\t\t\treturn _left;\n\t\t\t}\n\n\t\t},\n\n\t\t_clearEmpty: function (item) {\n\t\t\tfunction replaceClass(elem, search, replace, swap) {\n\t\t\t\tif (swap) {\n\t\t\t\t\tsearch = [replace, replace = search][0];\n\t\t\t\t}\n\n\t\t\t\t$(elem).removeClass(search).addClass(replace);\n\t\t\t}\n\n\t\t\tvar o = this.options,\n\t\t\t\tchildrenList = $(item).children(o.listType),\n\t\t\t\thasChildren = childrenList.is(':not(:empty)');\n\n\t\t\tvar doNotClear =\n\t\t\t\to.doNotClear ||\n\t\t\t\thasChildren ||\n\t\t\t\to.protectRoot && $(item)[0] === this.element[0];\n\n\t\t\tif (o.isTree) {\n\t\t\t\treplaceClass(item, o.branchClass, o.leafClass, doNotClear);\n\n\t\t\t\tif (doNotClear && hasChildren) {\n\t\t\t\t\treplaceClass(item, o.collapsedClass, o.expandedClass);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!doNotClear) {\n\t\t\t\tchildrenList.remove();\n\t\t\t}\n\t\t},\n\n\t\t_getLevel: function(item) {\n\n\t\t\tvar level = 1,\n\t\t\t\tlist;\n\n\t\t\tif (this.options.listType) {\n\t\t\t\tlist = item.closest(this.options.listType);\n\t\t\t\twhile (list && list.length > 0 && !list.is(\".ui-sortable\")) {\n\t\t\t\t\tlevel++;\n\t\t\t\t\tlist = list.parent().closest(this.options.listType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn level;\n\t\t},\n\n\t\t_getChildLevels: function(parent, depth) {\n\t\t\tvar self = this,\n\t\t\t\to = this.options,\n\t\t\t\tresult = 0;\n\t\t\tdepth = depth || 0;\n\n\t\t\t$(parent).children(o.listType).children(o.items).each(function(index, child) {\n\t\t\t\tresult = Math.max(self._getChildLevels(child, depth + 1), result);\n\t\t\t});\n\n\t\t\treturn depth ? result + 1 : result;\n\t\t},\n\n\t\t_isAllowed: function(parentItem, level, levels) {\n\t\t\tvar o = this.options,\n\t\t\t\t// this takes into account the maxLevels set to the recipient list\n\t\t\t\tmaxLevels = this\n\t\t\t\t\t.placeholder\n\t\t\t\t\t.closest(\".ui-sortable\")\n\t\t\t\t\t.nestedSortable(\"option\", \"maxLevels\"),\n\n\t\t\t\t// Check if the parent has changed to prevent it, when o.disableParentChange is true\n\t\t\t\toldParent = this.currentItem.parent().parent(),\n\t\t\t\tdisabledByParentchange = o.disableParentChange && (\n\t\t\t\t\t//From somewhere to somewhere else, except the root\n\t\t\t\t\ttypeof parentItem !== 'undefined' && !oldParent.is(parentItem) ||\n\t\t\t\t\ttypeof parentItem === 'undefined' && oldParent.is(\"li\")\t//From somewhere to the root\n\t\t\t\t);\n\t\t\t// mjs - is the root protected?\n\t\t\t// mjs - are we nesting too deep?\n\t\t\tif (\n\t\t\t\tdisabledByParentchange ||\n\t\t\t\t!o.isAllowed(this.placeholder, parentItem, this.currentItem)\n\t\t\t) {\n\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\tif (maxLevels < levels && maxLevels !== 0) {\n\t\t\t\t\tthis.beyondMaxLevels = levels - maxLevels;\n\t\t\t\t} else {\n\t\t\t\t\tthis.beyondMaxLevels = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (maxLevels < levels && maxLevels !== 0) {\n\t\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = levels - maxLevels;\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeholder.removeClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}));\n\n\t$.mjs.nestedSortable.prototype.options = $.extend(\n\t\t{},\n\t\t$.ui.sortable.prototype.options,\n\t\t$.mjs.nestedSortable.prototype.options\n\t);\n}));\n"]}