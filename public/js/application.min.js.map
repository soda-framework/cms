{"version":3,"sources":["application.js"],"names":["slugify","text","toString","toLowerCase","replace","substring","generateSlug","allowExternal","substr","indexOf","prefixSlug","prefix","externalSlug","link","prompt","$","ajaxSetup","headers","X-CSRF-TOKEN","attr","css","window","height","on","this","val","data","filteredText","target","from","title","form","submit"],"mappings":"AA0CA,QAASA,SAAQC,GAYb,MAXAA,GAAOA,EAAKC,WAAWC,cAClBC,QAAQ,OAAQ,KAChBA,QAAQ,wBAAyB,IACjCA,QAAQ,SAAU,KAClBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IAEM,KAAvBH,EAAKI,UAAU,EAAE,KAChBJ,EAAO,IAAMA,GAGVA,EAIX,QAASK,cAAaL,EAAMM,GAgBxB,QAfKA,GAAwC,SAAtBN,EAAKO,OAAO,EAAG,IAAiBP,EAAKQ,QAAQ,cAChER,EAAOA,EAAKC,WAAWC,cAClBC,QAAQ,iBAAkB,IAC1BA,QAAQ,OAAQ,KAChBA,QAAQ,wBAAyB,IACjCA,QAAQ,SAAU,KAClBA,QAAQ,SAAU,KAClBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IAEM,KAAvBH,EAAKI,UAAU,EAAE,KAChBJ,EAAO,IAAMA,IAIdA,EAGX,QAASS,YAAWT,EAAMU,GAMtB,MAJIA,IAA+B,KAArBA,EAAOH,aACjBG,GAAkB,KAGfL,aAAaK,EAASV,GAGjC,QAASW,gBACL,GAAIC,GAAQC,OAAO,qBAAsB,UACzC,OAAQD,GAAKJ,QAAQ,WAAgB,UAAYI,EAAOA,EAxF5DE,EAAE,WACEA,EAAEC,WACEC,SACIC,eAAgBH,EAAE,2BAA2BI,KAAK,cAI1DJ,EAAE,gCAAgCK,IAAI,aAAcL,EAAEM,QAAQC,UAE9DP,EAAE,eAAeQ,GAAG,QAAS,WACzB,GAAItB,GAAOc,EAAES,MAAMC,MACflB,EAAwC,GAAxBQ,EAAES,MAAME,KAAK,QAE7BC,EAAerB,aAAaL,EAAMM,EAEnCoB,KAAiB1B,GAChBc,EAAES,MAAMC,IAAIE,KAIpBZ,EAAE,wBAAwBQ,GAAG,QAAS,WAClC,GAAIK,GAASb,EAAES,MAAME,KAAK,iBACtBG,EAAOd,EAAES,MAAME,KAAK,sBAEpBf,EAASI,EAAEa,GAAQF,KAAK,eACxBI,EAAQf,EAAEc,GAAMJ,KAEpBV,GAAEa,GAAQH,IAAIf,WAAWoB,EAAOnB,MAGpCI,EAAE,wBAAwBQ,GAAG,QAAS,WAClC,GAAIK,GAASb,EAAES,MAAME,KAAK,gBAE1BX,GAAEa,GAAQH,IAAIb,kBAGlBG,EAAE,kBAAkBQ,GAAG,QAAS,WAC5B,GAAIQ,GAAOhB,EAAES,MAAME,KAAK,UACxBX,GAAEgB,GAAMC","file":"application.min.js","sourcesContent":["$(function () {\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n    });\n\n    $('.soda-wrapper, .main-content').css('min-height', $(window).height());\n\n    $('[data-slug]').on('keyup', function () {\n        var text = $(this).val();\n        var allowExternal = $(this).data('slug') == true;\n\n        var filteredText = generateSlug(text, allowExternal);\n\n        if(filteredText !== text) {\n            $(this).val(filteredText);\n        }\n    });\n\n    $('[data-slug-generate]').on('click', function () {\n        var target = $(this).data('slug-generate');\n        var from = $(this).data('slug-generate-from');\n\n        var prefix = $(target).data('slug-prefix');\n        var title = $(from).val();\n\n        $(target).val(prefixSlug(title, prefix));\n    });\n\n    $('[data-slug-external]').on('click', function () {\n        var target = $(this).data('slug-external');\n\n        $(target).val(externalSlug());\n    });\n\n    $('[data-submits]').on('click', function() {\n        var form = $(this).data('submits');\n        $(form).submit();\n    });\n});\n\nfunction slugify(text) {\n    text = text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')           // Replace spaces with -\n        .replace(/[^\\w\\-\\/\\%\\+\\?\\[\\]]+/g, '')       // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n        .replace(/^-+/, '')             // Trim - from start of text\n        .replace(/-+$/, '');            // Trim - from end of text\n\n    if(text.substring(0,1) != '/') {\n        text = '/' + text;\n    }\n\n    return text;\n}\n\n\nfunction generateSlug(text, allowExternal) {\n    if (!allowExternal || (text.substr(0, 4) !== 'http' && text.indexOf('://') == -1)) {\n        text = text.toString().toLowerCase()\n            .replace(/<(?:.|\\n)*?>/gm, '')         // remove html tags\n            .replace(/\\s+/g, '-')                  // Replace spaces with -\n            .replace(/[^\\w\\-\\/\\%\\+\\?\\[\\]]+/g, '')  // Remove all non-word chars\n            .replace(/\\-\\-+/g, '-')                // Replace multiple - with single -\n            .replace(/\\/\\/+/g, '/')                // Replace multiple / with single /\n            .replace(/^-+/, '')                    // Trim - from start of text\n            .replace(/-+$/, '');                   // Trim - from end of text\n\n        if(text.substring(0,1) != '/') {\n            text = '/' + text;\n        }\n    }\n\n    return text;\n};\n\nfunction prefixSlug(text, prefix) {\n    // If the last character is not a slash append a slash to it.\n    if (prefix && prefix.substr(-1) != '/') {\n        prefix = prefix + '/';\n    }\n\n    return generateSlug(prefix + text);\n};\n\nfunction externalSlug() {\n    var link  = prompt(\"Enter external URL\", \"http://\");\n    return (link.indexOf('://') == -1) ? 'http://' + link : link;\n};\n"],"sourceRoot":"/source/"}